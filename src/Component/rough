{
  "name": "bus-app-master",
  "version": "0.0.0",
  "private": true,
  "scripts": {
    "start": "node app.js",
    "start-dev-server": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "proxy": "http://localhost:8080",
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": [
    ">0.2%",
    "not dead",
    "not ie <= 11",
    "not op_mini all"
  ],
  "dependencies": {
    "axios": "^0.18.0",
    "body-parser": "^1.18.3",
    "bootstrap": "^4.3.1",
    "cookie-parser": "~1.4.3",
    "debug": "~2.6.9",
    "express": "~4.16.0",
    "http-errors": "~1.6.2",
    "http-proxy-middleware": "^0.19.1",
    "jade": "~1.11.0",
    "mongoose": "^5.4.14",
    "morgan": "~1.9.0",
    "react": "^16.7.0",
    "react-dom": "^16.7.0",
    "react-redux": "^6.0.1",
    "react-router-dom": "^4.3.1",
    "react-scripts": "2.1.3",
    "reactstrap": "^7.1.0",
    "redux": "^4.0.1",
    "redux-thunk": "^2.3.0",
    "serve-favicon": "^2.5.0"
  }
}
{
        // const _props = {
        //     msg: "Username or Password are Invalid", 
        //     type: "Warning",
        //     className: "alert alert-warning"
        // }
        // //console.log("in render()", this.props)
        // const style = {
        //     marginTop: '10%'
        //   };
        // const styleCursor = {
        //     cursor: 'pointer'
        // }
        // if (this.props.user.hasOwnProperty("adminAccess") &&  this.props.user.adminAccess === true) {
        //     return <Redirect to='/admin' />
        // }
        // if (this.props.user.userAccess === true) {
        //     return <Redirect to='/user' />
        // }
        return(
            <Container style={style}>
            <Row>
                <Col sm="12" md={{ size: 6, offset: 3 }}>
                    <Nav tabs>
                        <NavItem>
                            <NavLink
                            className={classnames({ active: this.state.activeTab === '1' })}
                            onClick={() => { this.toggle('1'); }} style={styleCursor}
                            >
                                USER
                            </NavLink>
                        </NavItem>
                        <NavItem>
                            <NavLink
                            className={classnames({ active: this.state.activeTab === '2' })}
                            onClick={() => { this.toggle('2'); }} style={styleCursor}
                            >
                                ADMIN
                            </NavLink>
                        </NavItem>
                    </Nav>
                </Col>
            </Row><br/>
               <TabContent activeTab={this.state.activeTab}>
                   <TabPane tabId="1">
                        <Row>
                            <Col sm="12" md={{ size: 6, offset: 3 }}><InputGroup>
                                <Input type="text" placeholder="username" name="username" onChange={ (event) => this.handleUserInput(event)} />
                                </InputGroup>
                            </Col>
                        </Row><br/>
                        <Row>
                            <Col sm="12" md={{ size: 6, offset: 3 }}><InputGroup>
                                <Input type="password" placeholder="password"  name="password" onChange={ (event) => this.handleUserInput(event)}/>
                                </InputGroup>
                            </Col>
                        </Row><br/>
                        <Button className="mrg10" color="primary" onClick={this.register}>Register</Button>    
                        <Button className="mrg10" color="success" onClick={this.user}>Sign In</Button>
                        { this.props.user.login  === "Failed" ?
                            <MsgBox {..._props}></MsgBox>
                        : null }
                    </TabPane>
                   <TabPane tabId="2">
                   <Row>
                    <Col sm="12" md={{ size: 6, offset: 3 }}><InputGroup>
                        <Input placeholder="admin name" name="adUserName" onChange={ (event) => this.handleUserInput(event)}/>
                        </InputGroup>
                    </Col>
                    </Row><br/>
                    <Row>
                        <Col sm="12" md={{ size: 6, offset: 3 }}><InputGroup>
                            <Input type="password" placeholder="Password" name="adPassword" onChange={ (event) => this.handleUserInput(event)}/>
                            </InputGroup>
                        </Col>
                    </Row><br/>
                        <Button color="primary" onClick={this.admin}>Admin Login</Button>
                        { this.props.user.login === "Failed" ?
                            <MsgBox {..._props}></MsgBox>
                        : null }
                   </TabPane>
               </TabContent>
           
            </Container>
            {
            cityName:'A',
            cityDescription:'sdfghjhjhjjhdg'
        },
        {
            cityName:'B',
            cityDescription:'dsadffergreg'
        }
        )
    }